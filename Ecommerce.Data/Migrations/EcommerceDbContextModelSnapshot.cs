// <auto-generated />
using System;
using Ecommerce.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("Ecommerce.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("221a6427-71e6-4efc-9c48-73bb6609cd85"),
                            ConcurrencyStamp = "332637b4-7921-4c77-8f0f-7070e36347b6",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("c04a0585-befc-4aaa-9aee-4cf74d3cc08d"),
                            ConcurrencyStamp = "584935ed-d8ec-4427-940e-fdcf8500e994",
                            Name = "member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "14c6e567-ae7a-49a0-90a2-4b716ac13d2c",
                            Email = "phungnhatphu4@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PHUNGNHATPHU4@GMAIL>COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEEpzM8IQVlq1vq3S7GGzTgEv2VN37FAqvf3gBrISe/PNgjLi31pE0pRJK/ttsMoILw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a799990b-25f0-4359-9087-b73c5184073a",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.ChatRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ReceiverID")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiverStatus")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserIDs")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.District", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<int>("ProvinceID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = 0,
                            Name = "Cau Giay",
                            ProvinceID = 1
                        },
                        new
                        {
                            ID = 2,
                            Code = 0,
                            Name = "BA Dinh",
                            ProvinceID = 1
                        },
                        new
                        {
                            ID = 3,
                            Code = 0,
                            Name = "Thieu Hoa",
                            ProvinceID = 4
                        },
                        new
                        {
                            ID = 4,
                            Code = 0,
                            Name = "Quang Xuong",
                            ProvinceID = 4
                        },
                        new
                        {
                            ID = 5,
                            Code = 0,
                            Name = "Quan 1",
                            ProvinceID = 3
                        },
                        new
                        {
                            ID = 6,
                            Code = 0,
                            Name = "Quan 2",
                            ProvinceID = 3
                        },
                        new
                        {
                            ID = 7,
                            Code = 0,
                            Name = "Uong Bi",
                            ProvinceID = 2
                        },
                        new
                        {
                            ID = 8,
                            Code = 0,
                            Name = "Ha Long",
                            ProvinceID = 2
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatRoomID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SenderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasMaxLength(4)
                        .HasDefaultValue(1);

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Detail")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistrictID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetaDescriptions")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("PromotionPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("StateID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TopHot")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<int>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Warranty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictID = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iphone 6",
                            Price = 0m,
                            PromotionPrice = 0m,
                            ProvinceID = 0,
                            Quantity = 0,
                            StateID = 1,
                            Status = 0,
                            TopHot = false,
                            UserID = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            ViewCount = 0,
                            Warranty = 0,
                            categoryID = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictID = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iphone 7",
                            Price = 0m,
                            PromotionPrice = 0m,
                            ProvinceID = 0,
                            Quantity = 0,
                            StateID = 2,
                            Status = 0,
                            TopHot = false,
                            UserID = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            ViewCount = 0,
                            Warranty = 0,
                            categoryID = 2
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictID = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iphone 8",
                            Price = 0m,
                            PromotionPrice = 0m,
                            ProvinceID = 0,
                            Quantity = 0,
                            StateID = 3,
                            Status = 0,
                            TopHot = false,
                            UserID = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            ViewCount = 0,
                            Warranty = 0,
                            categoryID = 3
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictID = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iphone 9",
                            Price = 0m,
                            PromotionPrice = 0m,
                            ProvinceID = 0,
                            Quantity = 0,
                            StateID = 3,
                            Status = 0,
                            TopHot = false,
                            UserID = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            ViewCount = 0,
                            Warranty = 0,
                            categoryID = 4
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaDescriptions")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ShowOnHome")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ProductCategorys");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dien thoai",
                            ParentID = 0,
                            Status = 0
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Labtop",
                            ParentID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "tivi",
                            ParentID = 1,
                            Status = 0
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tu lanh",
                            ParentID = 2,
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "May giat",
                            ParentID = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = 100000,
                            Name = "Ha Noi"
                        },
                        new
                        {
                            ID = 2,
                            Code = 100000,
                            Name = "Quang Ninh"
                        },
                        new
                        {
                            ID = 3,
                            Code = 200000,
                            Name = "HCM"
                        },
                        new
                        {
                            ID = 4,
                            Code = 200000,
                            Name = "Thanh Hoa"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Receiver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Moi 100%"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Nhu moi"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Cũ"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "AdminClaim",
                            ClaimValue = "Admin role claim",
                            RoleId = new Guid("221a6427-71e6-4efc-9c48-73bb6609cd85")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "MemberClaim",
                            ClaimValue = "Menber role claim",
                            RoleId = new Guid("c04a0585-befc-4aaa-9aee-4cf74d3cc08d")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "AdminClaim",
                            ClaimValue = "Admin role claim",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("64d8abab-2f04-4856-a9a5-d17ef35628b1"),
                            RoleId = new Guid("221a6427-71e6-4efc-9c48-73bb6609cd85")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
